FROM fmalmeida/bacannot:main_tools
SHELL ["/bin/bash", "-c"]

#######################################
### Download up-to-date databases   ###
### this image will be updated each ###
### month with the Github-actions   ###
#######################################

# Update CARD-RGI database
RUN wget https://card.mcmaster.ca/latest/data && \
		tar -xvf data ./card.json && \
		rm data && \
		conda run -n PY36_env rgi load --card_json ./card.json

# Platon DB
RUN mkdir -p /work/platon && \
		wget -O /work/platon/db.tar.gz "https://zenodo.org/record/4066768/files/db.tar.gz"

# Resfinder databases
RUN cd /work/resfinder && \
		git clone https://git@bitbucket.org/genomicepidemiology/resfinder_db.git db_resfinder && \
		git clone https://git@bitbucket.org/genomicepidemiology/pointfinder_db.git db_pointfinder
RUN cd /work/resfinder/db_resfinder && \
		python3 INSTALL.py $(which kma_index) non_interactive && \
		cd ../db_pointfinder && \
		python3 INSTALL.py $(which kma_index) non_interactive

# plasmidfinder database
RUN mkdir -p /opt/conda/share/plasmidfinder-2.1.1-1/database/ && \
		cd /opt/conda/share/plasmidfinder-2.1.1-1/database/ && \
		git clone https://bitbucket.org/genomicepidemiology/plasmidfinder_db.git && \
   	mv plasmidfinder_db/* . && \
		rm -rf plasmidfinder_db && \
		python INSTALL.py

# Phigaro database
RUN source activate PY36_env && \
		(echo -e "\n" ; echo -e "\n" ; echo "N" ; echo "N") | phigaro-setup --pvog /work/phigaro_pvog -c /work/phigaro_config.yml --no-updatedb && \
		chmod a+rw -R /work/phigaro_pvog

# AMRFinderPlus database
RUN mkdir -p /opt/conda/share/amrfinderplus/data && amrfinder_update --force_update --database /opt/conda/share/amrfinderplus/data

WORKDIR /work/dbs

#######################
### BLAST databases ###
#######################

## VFDB nt
RUN mkdir vfdb && \
		wget http://www.mgc.ac.cn/VFs/Down/VFDB_setA_nt.fas.gz && \
		gzip -d VFDB_setA_nt.fas.gz && \
		awk -v db=VFDB '/>/{ split($0,name," "); split($0,id," \\["); all=$0; $0=">" db "~~~" name[2] "~~~" name[1] "~~~[" id[2] "~~~" all }1' VFDB_setA_nt.fas | \
		sed -e 's/~>/~/g' -e 's/ ~/~/g' -e 's/]~/~/g' -e 's/ >/ /' | \
		awk -F "]" ' { if ($0 ~ />/) { gsub(" ", "_", $1); print $1 "] " $2 "]"} else { print $0 }}' > vfdb/sequences && \
		makeblastdb -in vfdb/sequences -title 'vfdb' -dbtype nucl -logfile /dev/null && \
		rm VFDB_setA_nt.fas

## ICEberg nt (ICEs)
RUN mkdir iceberg && \
		wget https://bioinfo-mml.sjtu.edu.cn/ICEberg2/download/ICE_seq_experimental.fas && \
		awk -v db=ICEberg '/>/{ split($0,a,"|"); all=$0; $0=">" db "~~~" "ICE_" a[2] "~~~" a[5] "~~~" a[3] "~~~" all }1' ICE_seq_experimental.fas | \
		sed -e 's/ >/ /g' > iceberg/sequences && \
		rm ICE_seq_experimental.fas && \
		makeblastdb -in iceberg/sequences -title 'iceberg' -dbtype nucl -logfile /dev/null

## ICEberg prot (genes)
RUN wget https://bioinfo-mml.sjtu.edu.cn/ICEberg2/download/ICE_aa_experimental.fas && \
		awk -v db=ICEberg \
		'/>/{ split($0,col," "); split(col[1],a,"[|]"); split(col[2],b,"[|]"); split($0,c,"[|]"); all=$0; $0=">" db "~~~" "ICE_" a[2] "~~~" b[4] "~~~" c[6] " " all }1' \
		ICE_aa_experimental.fas | sed -e 's/ >/ /g' | awk -F '\\]' \
		'{ if ($0 ~ />/) { gsub(" ","_",$1); gsub("_\\[","_",$1); gsub("~_","~",$1); print $1,$2 "]" } else { print $0 }}' > iceberg/proteins && \
		diamond makedb --in iceberg/proteins -d iceberg/diamond && \
		makeblastdb -in iceberg/proteins -title 'iceberg' -dbtype prot -logfile /dev/null && \
		rm ICE_aa_experimental.fas

##  VICTORS prot (genes)
RUN mkdir victors && \
		wget -O victors_original.fasta "http://www.phidias.us/victors/downloads/gen_downloads_protein.php" && \
		grep -v "^[^>M]" victors_original.fasta > victors_prot.fasta && \
		rm victors_original.fasta && \
		awk -v db=victors '/>/{ split($0,a,"|"); split(a[5],gene," \\["); all=$0; $0=">" db "~~~" gene[1] "~~~" a[4] "~~~" "Victors_" a[2] " " all }1' victors_prot.fasta | \
		sed -e 's/ >/ /g' -e 's/~ /~/g' | \
		awk -F "~~~" ' { if ($0 ~ />/) { gsub(" ", "_", $2); print $1 "~~~" $2 "~~~" $3 "~~~" $4 } else { print $0 }}' > victors/sequences && \
		diamond makedb --in victors/sequences -d victors/diamond && \
		makeblastdb -in victors/sequences -title 'victors' -dbtype prot -logfile /dev/null && \
		rm victors_prot.fasta

## PHAST prot (genes)
RUN mkdir phast && \
		wget -O phast_prot.fasta http://phaster.ca/downloads/prophage_virus.db && \
		awk -v db=phast '/>/{ split($0,a,"|"); split(a[5],gene," \\["); all=$0; $0=">" db "~~~" gene[1] "~~~" a[4]"~~~" "PHAST_" a[2] " " all }1' phast_prot.fasta | \
		sed -e 's/ >/ /g' -e 's/~ /~/g' | \
		awk -F "~~~" ' { if ($0 ~ />/) { gsub(" ", "_", $2); print $1 "~~~" $2 "~~~" $3 "~~~" $4 } else { print $0 }}' | \
		awk -F "~~~" ' { if ($0 ~ />/) { gsub("-", "_", $2); print $1 "~~~" $2 "~~~" $3 "~~~" $4 } else { print $0 }}' > phast/sequences && \
		rm phast_prot.fasta && \
		diamond makedb --in phast/sequences -d phast/diamond && \
		makeblastdb -in phast/sequences -title 'phast' -dbtype prot -logfile /dev/null

## ARGMiner prot
## argminer server has a lot of problems
COPY argminer_bkp/argminer.fasta /work/dbs/argminer.fasta
RUN mkdir ARGMiner && \
		( wget -t 1 http://bench.cs.vt.edu/ftp/argminer/release/ARGminer-v1.1.1.A.fasta && \
		awk -v db=ARGMiner '/>/{ split($0,a,"|"); $0=">" db "~~~" a[3] "~~~" a[1] "~~~" a[2] " " a[4] }1' ARGminer-v1.1.1.A.fasta | \
		sed -e 's/~>/~/g' -e 's/gi:.*:ref://g' -e 's/gi:.*:gb://g' -e 's/gi:.*:emb://g' -e 's/:~/~/g' > ARGMiner/sequences && \
		rm ARGminer-v1.1.1.A.fasta && \
		makeblastdb -in ARGMiner/sequences -title 'argminer' -dbtype prot -logfile /dev/null && \
		diamond makedb --in ARGMiner/sequences -d ARGMiner/diamond && \
		rm -rf /work/dbs/argminer.fasta ) || ( cat argminer.fasta > ARGMiner/sequences && \
		makeblastdb -in ARGMiner/sequences -title 'argminer' -dbtype prot -logfile /dev/null && \
		diamond makedb --in ARGMiner/sequences -d ARGMiner/diamond )

# Return to main workdir
WORKDIR /work

#####################################################################################
### CONDA env fixes to maintain compatibility with previous (until v2.2) versions ###
#####################################################################################
RUN ln -s /opt/conda/envs/PERL_env /opt/conda/envs/PROKKA
RUN ln -s /opt/conda/envs/PERL_env /opt/conda/envs/MLST
RUN ln -s /opt/conda/envs/PERL_env /opt/conda/envs/find_GIs
RUN ln -s /opt/conda/envs/PERL_env/bin/barrnap /opt/conda/bin/barrnap
RUN mkdir -p /miniconda/bin/ && ln -s /opt/conda/bin/python3 /miniconda/bin/python3
RUN ln -s /opt/conda /opt/conda/envs/phispy
RUN ln -s /opt/conda /opt/conda/envs/Resfinder
RUN ln -s /opt/conda /opt/conda/envs/PLATON
RUN ln -s /opt/conda /opt/conda/envs/PLASMIDFINDER
RUN ln -s /opt/conda /opt/conda/envs/AMRFINDERPLUS
RUN ln -s /opt/conda/envs/PY36_env /opt/conda/envs/RGI
RUN ln -s /opt/conda/envs/PY36_env/bin/phigaro /opt/conda/bin/

###########################
### Fix RGI permissions ###
###########################
ENV MPLCONFIGDIR="/tmp/"
RUN chmod -R a+rwx /opt/conda/envs/PY36_env/lib/python3.6/site-packages/app/

#####################################################################
### Fix AMRFinderPlus that do not find the database automatically ###
#####################################################################
RUN mv /opt/conda/bin/amrfinder /opt/conda/bin/amrfinder_source && \
		echo "#!/bin/bash" >> /opt/conda/bin/amrfinder && \
		echo "/opt/conda/bin/amrfinder_source --database /opt/conda/share/amrfinderplus/data/latest \$@" >> /opt/conda/bin/amrfinder && \
		chmod a+rwx /opt/conda/bin/amrfinder

#####################################################################
### Fix plasmidfinder that do not find the database automatically ###
#####################################################################
RUN mv /opt/conda/bin/plasmidfinder.py /opt/conda/bin/plasmidfinder_source.py && \
		echo "#!/bin/bash" >> /usr/local/bin/plasmidfinder.py && \
		echo "/opt/conda/bin/plasmidfinder_source.py -p /opt/conda/share/plasmidfinder*/database \$@" >> /usr/local/bin/plasmidfinder.py && \
		chmod a+rwx /usr/local/bin/plasmidfinder.py
